ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_Echo.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Timer_Echo_initVar
  20              		.bss
  21              		.type	Timer_Echo_initVar, %object
  22              		.size	Timer_Echo_initVar, 1
  23              	Timer_Echo_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Timer_Echo_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Timer_Echo_Init
  28              		.thumb
  29              		.thumb_func
  30              		.type	Timer_Echo_Init, %function
  31              	Timer_Echo_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\Timer_Echo.c"
   1:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_Echo.c **** * File Name: Timer_Echo.c
   3:Generated_Source\PSoC5/Timer_Echo.c **** * Version 2.80
   4:Generated_Source\PSoC5/Timer_Echo.c **** *
   5:Generated_Source\PSoC5/Timer_Echo.c **** * Description:
   6:Generated_Source\PSoC5/Timer_Echo.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_Echo.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_Echo.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_Echo.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_Echo.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_Echo.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_Echo.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_Echo.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_Echo.c **** *
  15:Generated_Source\PSoC5/Timer_Echo.c **** * Note:
  16:Generated_Source\PSoC5/Timer_Echo.c **** *
  17:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_Echo.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_Echo.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_Echo.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_Echo.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_Echo.c **** 
  24:Generated_Source\PSoC5/Timer_Echo.c **** #include "Timer_Echo.h"
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 2


  25:Generated_Source\PSoC5/Timer_Echo.c **** 
  26:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_Echo.c **** 
  28:Generated_Source\PSoC5/Timer_Echo.c **** 
  29:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Init
  31:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer_Echo.c **** *
  33:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_Echo.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_Echo.c **** *
  36:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_Echo.c **** *  void
  38:Generated_Source\PSoC5/Timer_Echo.c **** *
  39:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
  40:Generated_Source\PSoC5/Timer_Echo.c **** *  void
  41:Generated_Source\PSoC5/Timer_Echo.c **** *
  42:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Init(void) 
  44:Generated_Source\PSoC5/Timer_Echo.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC5/Timer_Echo.c ****     #if(!Timer_Echo_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_Echo.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_Echo.c ****             uint8 Timer_Echo_interruptState;
  48:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_Echo.c **** 
  50:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= Timer_Echo_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer_Echo.c **** 
  54:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_Echo.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL2 &= ((uint8)(~Timer_Echo_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_Echo.c **** 
  59:Generated_Source\PSoC5/Timer_Echo.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_Echo.c **** 
  63:Generated_Source\PSoC5/Timer_Echo.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_Echo.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_Echo.c **** 
  69:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_RunModeUsed == 2)
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 3


  70:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_Echo.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_Echo.c **** 
  76:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_Echo.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_Echo.c **** 
  82:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_Echo.c **** 
  84:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL2 |= Timer_Echo_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer_Echo.c **** 
  90:Generated_Source\PSoC5/Timer_Echo.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_Echo.c **** 
  95:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 &= ((uint8)(~Timer_Echo_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_Echo.c **** 
  99:Generated_Source\PSoC5/Timer_Echo.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_Echo.c ****                 Timer_Echo_CONTROL3 |= Timer_Echo_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_Echo.c **** 
 103:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_Echo.c **** 
 105:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 &= ((uint8)(~Timer_Echo_RT1_MASK));
 107:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 |= Timer_Echo_SYNC;
 108:Generated_Source\PSoC5/Timer_Echo.c **** 
 109:Generated_Source\PSoC5/Timer_Echo.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 &= ((uint8)(~Timer_Echo_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_RT1 |= Timer_Echo_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer_Echo.c **** 
 113:Generated_Source\PSoC5/Timer_Echo.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL2 |= Timer_Echo_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_Echo.c **** 
 117:Generated_Source\PSoC5/Timer_Echo.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_WritePeriod(Timer_Echo_INIT_PERIOD);
  46              		.loc 1 118 0
  47 0006 40F2E730 		movw	r0, #999
  48 000a FFF7FEFF 		bl	Timer_Echo_WritePeriod
 119:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_WriteCounter(Timer_Echo_INIT_PERIOD);
  49              		.loc 1 119 0
  50 000e 40F2E730 		movw	r0, #999
  51 0012 FFF7FEFF 		bl	Timer_Echo_WriteCounter
 120:Generated_Source\PSoC5/Timer_Echo.c **** 
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 4


 121:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CAPTURE_COUNT_CTRL |= Timer_Echo_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_SetCaptureCount(Timer_Echo_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_Echo.c **** 
 126:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_SetCaptureMode(Timer_Echo_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_Echo.c **** 
 131:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_Echo.c ****             #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_Echo.c ****                 if (0u == (Timer_Echo_CONTROL & Timer_Echo__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer_Echo.c ****                 {
 135:Generated_Source\PSoC5/Timer_Echo.c ****                     Timer_Echo_SetTriggerMode(Timer_Echo_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_Echo.c ****                 }
 137:Generated_Source\PSoC5/Timer_Echo.c ****             #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_Echo.c **** 
 140:Generated_Source\PSoC5/Timer_Echo.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_Echo.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_interruptState = CyEnterCriticalSection();
  52              		.loc 1 142 0
  53 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  54 001a 0346     		mov	r3, r0
  55 001c FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/Timer_Echo.c **** 
 144:Generated_Source\PSoC5/Timer_Echo.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_STATUS_AUX_CTRL |= Timer_Echo_STATUS_ACTL_INT_EN_MASK;
  56              		.loc 1 145 0
  57 001e 0A4A     		ldr	r2, .L2
  58 0020 094B     		ldr	r3, .L2
  59 0022 1B78     		ldrb	r3, [r3]
  60 0024 DBB2     		uxtb	r3, r3
  61 0026 43F01003 		orr	r3, r3, #16
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/Timer_Echo.c **** 
 147:Generated_Source\PSoC5/Timer_Echo.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_Echo.c ****         CyExitCriticalSection(Timer_Echo_interruptState);
  64              		.loc 1 148 0
  65 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0030 1846     		mov	r0, r3
  67 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC5/Timer_Echo.c **** 
 150:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_Echo.c **** 		
 154:Generated_Source\PSoC5/Timer_Echo.c **** 		
 155:Generated_Source\PSoC5/Timer_Echo.c ****         #if (Timer_Echo_InterruptOnCaptureCount && !Timer_Echo_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer_Echo.c ****             Timer_Echo_SetInterruptCount(Timer_Echo_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer_Echo.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_Echo.c **** 
 159:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_ClearFIFO();
  68              		.loc 1 159 0
  69 0036 FFF7FEFF 		bl	Timer_Echo_ClearFIFO
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 5


 160:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_Echo.c **** 
 162:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_SetInterruptMode(Timer_Echo_INIT_INTERRUPT_MODE);
  70              		.loc 1 162 0
  71 003a 0020     		movs	r0, #0
  72 003c FFF7FEFF 		bl	Timer_Echo_SetInterruptMode
 163:Generated_Source\PSoC5/Timer_Echo.c **** }
  73              		.loc 1 163 0
  74 0040 00BF     		nop
  75 0042 0837     		adds	r7, r7, #8
  76              		.cfi_def_cfa_offset 8
  77 0044 BD46     		mov	sp, r7
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 95650040 		.word	1073767829
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	Timer_Echo_Init, .-Timer_Echo_Init
  88              		.section	.text.Timer_Echo_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	Timer_Echo_Enable
  91              		.thumb
  92              		.thumb_func
  93              		.type	Timer_Echo_Enable, %function
  94              	Timer_Echo_Enable:
  95              	.LFB1:
 164:Generated_Source\PSoC5/Timer_Echo.c **** 
 165:Generated_Source\PSoC5/Timer_Echo.c **** 
 166:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Enable
 168:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_Echo.c **** *
 170:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_Echo.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_Echo.c **** *
 173:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 175:Generated_Source\PSoC5/Timer_Echo.c **** *
 176:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 177:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 178:Generated_Source\PSoC5/Timer_Echo.c **** *
 179:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Enable(void) 
 181:Generated_Source\PSoC5/Timer_Echo.c **** {
  96              		.loc 1 181 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 6


 105              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC5/Timer_Echo.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_ENABLE |= Timer_Echo_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_STBY_ENABLE |= Timer_Echo_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_Echo.c **** 
 188:Generated_Source\PSoC5/Timer_Echo.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED || Timer_Echo_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= Timer_Echo_CTRL_ENABLE;
 191:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_Echo.c **** }
 106              		.loc 1 192 0
 107 0004 00BF     		nop
 108 0006 BD46     		mov	sp, r7
 109              		.cfi_def_cfa_register 13
 110              		@ sp needed
 111 0008 80BC     		pop	{r7}
 112              		.cfi_restore 7
 113              		.cfi_def_cfa_offset 0
 114 000a 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE1:
 117              		.size	Timer_Echo_Enable, .-Timer_Echo_Enable
 118              		.section	.text.Timer_Echo_Start,"ax",%progbits
 119              		.align	2
 120              		.global	Timer_Echo_Start
 121              		.thumb
 122              		.thumb_func
 123              		.type	Timer_Echo_Start, %function
 124              	Timer_Echo_Start:
 125              	.LFB2:
 193:Generated_Source\PSoC5/Timer_Echo.c **** 
 194:Generated_Source\PSoC5/Timer_Echo.c **** 
 195:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Start
 197:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_Echo.c **** *
 199:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_Echo.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_Echo.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_Echo.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer_Echo.c **** *
 204:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 206:Generated_Source\PSoC5/Timer_Echo.c **** *
 207:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 208:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 209:Generated_Source\PSoC5/Timer_Echo.c **** *
 210:Generated_Source\PSoC5/Timer_Echo.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_Echo.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_Echo.c **** *
 214:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Start(void) 
 216:Generated_Source\PSoC5/Timer_Echo.c **** {
 126              		.loc 1 216 0
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 7


 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130 0000 80B5     		push	{r7, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC5/Timer_Echo.c ****     if(Timer_Echo_initVar == 0u)
 136              		.loc 1 217 0
 137 0004 064B     		ldr	r3, .L7
 138 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139 0008 002B     		cmp	r3, #0
 140 000a 04D1     		bne	.L6
 218:Generated_Source\PSoC5/Timer_Echo.c ****     {
 219:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_Init();
 141              		.loc 1 219 0
 142 000c FFF7FEFF 		bl	Timer_Echo_Init
 220:Generated_Source\PSoC5/Timer_Echo.c **** 
 221:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_initVar = 1u;   /* Clear this bit for Initialization */
 143              		.loc 1 221 0
 144 0010 034B     		ldr	r3, .L7
 145 0012 0122     		movs	r2, #1
 146 0014 1A70     		strb	r2, [r3]
 147              	.L6:
 222:Generated_Source\PSoC5/Timer_Echo.c ****     }
 223:Generated_Source\PSoC5/Timer_Echo.c **** 
 224:Generated_Source\PSoC5/Timer_Echo.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_Enable();
 148              		.loc 1 225 0
 149 0016 FFF7FEFF 		bl	Timer_Echo_Enable
 226:Generated_Source\PSoC5/Timer_Echo.c **** }
 150              		.loc 1 226 0
 151 001a 00BF     		nop
 152 001c 80BD     		pop	{r7, pc}
 153              	.L8:
 154 001e 00BF     		.align	2
 155              	.L7:
 156 0020 00000000 		.word	Timer_Echo_initVar
 157              		.cfi_endproc
 158              	.LFE2:
 159              		.size	Timer_Echo_Start, .-Timer_Echo_Start
 160              		.section	.text.Timer_Echo_Stop,"ax",%progbits
 161              		.align	2
 162              		.global	Timer_Echo_Stop
 163              		.thumb
 164              		.thumb_func
 165              		.type	Timer_Echo_Stop, %function
 166              	Timer_Echo_Stop:
 167              	.LFB3:
 227:Generated_Source\PSoC5/Timer_Echo.c **** 
 228:Generated_Source\PSoC5/Timer_Echo.c **** 
 229:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_Stop
 231:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_Echo.c **** *
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 8


 233:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 234:Generated_Source\PSoC5/Timer_Echo.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_Echo.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_Echo.c **** *
 237:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 239:Generated_Source\PSoC5/Timer_Echo.c **** *
 240:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 241:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 242:Generated_Source\PSoC5/Timer_Echo.c **** *
 243:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_Echo.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_Echo.c **** *
 246:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_Stop(void) 
 248:Generated_Source\PSoC5/Timer_Echo.c **** {
 168              		.loc 1 248 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 80B4     		push	{r7}
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 0002 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/Timer_Echo.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_Echo.c ****     #if(!Timer_Echo_UDB_CONTROL_REG_REMOVED || Timer_Echo_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_ENABLE));
 252:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_Echo.c **** 
 254:Generated_Source\PSoC5/Timer_Echo.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_Echo.c ****     #if (Timer_Echo_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_ENABLE &= ((uint8)(~Timer_Echo_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_Echo_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_Echo.c **** }
 178              		.loc 1 259 0
 179 0004 00BF     		nop
 180 0006 BD46     		mov	sp, r7
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 0008 80BC     		pop	{r7}
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 000a 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE3:
 189              		.size	Timer_Echo_Stop, .-Timer_Echo_Stop
 190              		.section	.text.Timer_Echo_SetInterruptMode,"ax",%progbits
 191              		.align	2
 192              		.global	Timer_Echo_SetInterruptMode
 193              		.thumb
 194              		.thumb_func
 195              		.type	Timer_Echo_SetInterruptMode, %function
 196              	Timer_Echo_SetInterruptMode:
 197              	.LFB4:
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 9


 260:Generated_Source\PSoC5/Timer_Echo.c **** 
 261:Generated_Source\PSoC5/Timer_Echo.c **** 
 262:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetInterruptMode
 264:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer_Echo.c **** *
 266:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_Echo.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_Echo.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_Echo.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_Echo.c **** *
 271:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer_Echo.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_Echo.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_Echo.c **** *
 275:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 276:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 277:Generated_Source\PSoC5/Timer_Echo.c **** *
 278:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_Echo.c **** {
 198              		.loc 1 280 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 7, -4
 206 0002 83B0     		sub	sp, sp, #12
 207              		.cfi_def_cfa_offset 16
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 210 0006 0346     		mov	r3, r0
 211 0008 FB71     		strb	r3, [r7, #7]
 281:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_STATUS_MASK = interruptMode;
 212              		.loc 1 281 0
 213 000a 044A     		ldr	r2, .L11
 214 000c FB79     		ldrb	r3, [r7, #7]
 215 000e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/Timer_Echo.c **** }
 216              		.loc 1 282 0
 217 0010 00BF     		nop
 218 0012 0C37     		adds	r7, r7, #12
 219              		.cfi_def_cfa_offset 4
 220 0014 BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0016 80BC     		pop	{r7}
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 0018 7047     		bx	lr
 227              	.L12:
 228 001a 00BF     		.align	2
 229              	.L11:
 230 001c 85650040 		.word	1073767813
 231              		.cfi_endproc
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 10


 232              	.LFE4:
 233              		.size	Timer_Echo_SetInterruptMode, .-Timer_Echo_SetInterruptMode
 234              		.section	.text.Timer_Echo_SoftwareCapture,"ax",%progbits
 235              		.align	2
 236              		.global	Timer_Echo_SoftwareCapture
 237              		.thumb
 238              		.thumb_func
 239              		.type	Timer_Echo_SoftwareCapture, %function
 240              	Timer_Echo_SoftwareCapture:
 241              	.LFB5:
 283:Generated_Source\PSoC5/Timer_Echo.c **** 
 284:Generated_Source\PSoC5/Timer_Echo.c **** 
 285:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_Echo.c **** *
 289:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_Echo.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_Echo.c **** *
 292:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 294:Generated_Source\PSoC5/Timer_Echo.c **** *
 295:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 296:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 297:Generated_Source\PSoC5/Timer_Echo.c **** *
 298:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_Echo.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_Echo.c **** *
 301:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer_Echo.c **** {
 242              		.loc 1 303 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 80B4     		push	{r7}
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 7, -4
 250 0002 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/Timer_Echo.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG16(Timer_Echo_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 308:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG8(Timer_Echo_COUNTER_LSB_PTR_8BIT);
 252              		.loc 1 308 0
 253 0004 024B     		ldr	r3, .L14
 254 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC5/Timer_Echo.c ****     #endif/* (Timer_Echo_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_Echo.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_Echo.c **** }
 255              		.loc 1 311 0
 256 0008 00BF     		nop
 257 000a BD46     		mov	sp, r7
 258              		.cfi_def_cfa_register 13
 259              		@ sp needed
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 11


 260 000c 80BC     		pop	{r7}
 261              		.cfi_restore 7
 262              		.cfi_def_cfa_offset 0
 263 000e 7047     		bx	lr
 264              	.L15:
 265              		.align	2
 266              	.L14:
 267 0010 04650040 		.word	1073767684
 268              		.cfi_endproc
 269              	.LFE5:
 270              		.size	Timer_Echo_SoftwareCapture, .-Timer_Echo_SoftwareCapture
 271              		.section	.text.Timer_Echo_ReadStatusRegister,"ax",%progbits
 272              		.align	2
 273              		.global	Timer_Echo_ReadStatusRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	Timer_Echo_ReadStatusRegister, %function
 277              	Timer_Echo_ReadStatusRegister:
 278              	.LFB6:
 312:Generated_Source\PSoC5/Timer_Echo.c **** 
 313:Generated_Source\PSoC5/Timer_Echo.c **** 
 314:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_Echo.c **** *
 318:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_Echo.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_Echo.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_Echo.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_Echo.c **** *
 323:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 325:Generated_Source\PSoC5/Timer_Echo.c **** *
 326:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 327:Generated_Source\PSoC5/Timer_Echo.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_Echo.c **** *
 329:Generated_Source\PSoC5/Timer_Echo.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer_Echo.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_Echo.c **** *
 332:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_Echo.c **** uint8   Timer_Echo_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_Echo.c **** {
 279              		.loc 1 334 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/Timer_Echo.c ****     return (Timer_Echo_STATUS);
 289              		.loc 1 335 0
 290 0004 034B     		ldr	r3, .L18
 291 0006 1B78     		ldrb	r3, [r3]
 292 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 12


 336:Generated_Source\PSoC5/Timer_Echo.c **** }
 293              		.loc 1 336 0
 294 000a 1846     		mov	r0, r3
 295 000c BD46     		mov	sp, r7
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 000e 80BC     		pop	{r7}
 299              		.cfi_restore 7
 300              		.cfi_def_cfa_offset 0
 301 0010 7047     		bx	lr
 302              	.L19:
 303 0012 00BF     		.align	2
 304              	.L18:
 305 0014 65650040 		.word	1073767781
 306              		.cfi_endproc
 307              	.LFE6:
 308              		.size	Timer_Echo_ReadStatusRegister, .-Timer_Echo_ReadStatusRegister
 309              		.section	.text.Timer_Echo_ReadPeriod,"ax",%progbits
 310              		.align	2
 311              		.global	Timer_Echo_ReadPeriod
 312              		.thumb
 313              		.thumb_func
 314              		.type	Timer_Echo_ReadPeriod, %function
 315              	Timer_Echo_ReadPeriod:
 316              	.LFB7:
 337:Generated_Source\PSoC5/Timer_Echo.c **** 
 338:Generated_Source\PSoC5/Timer_Echo.c **** 
 339:Generated_Source\PSoC5/Timer_Echo.c **** #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_Echo.c **** 
 341:Generated_Source\PSoC5/Timer_Echo.c **** 
 342:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer_Echo.c **** *
 346:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_Echo.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_Echo.c **** *
 349:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 351:Generated_Source\PSoC5/Timer_Echo.c **** *
 352:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 353:Generated_Source\PSoC5/Timer_Echo.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_Echo.c **** *
 355:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_Echo.c **** {
 358:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_Echo.c ****         return ((uint8)Timer_Echo_CONTROL);
 360:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 361:Generated_Source\PSoC5/Timer_Echo.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_Echo.c **** }
 364:Generated_Source\PSoC5/Timer_Echo.c **** 
 365:Generated_Source\PSoC5/Timer_Echo.c **** 
 366:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 13


 369:Generated_Source\PSoC5/Timer_Echo.c **** *
 370:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_Echo.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_Echo.c **** *
 373:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_Echo.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_Echo.c **** *
 376:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 377:Generated_Source\PSoC5/Timer_Echo.c **** *
 378:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_Echo.c **** {
 381:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL = control;
 383:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 384:Generated_Source\PSoC5/Timer_Echo.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_Echo.c **** }
 387:Generated_Source\PSoC5/Timer_Echo.c **** 
 388:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_Echo.c **** 
 390:Generated_Source\PSoC5/Timer_Echo.c **** 
 391:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadPeriod
 393:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_Echo.c **** *
 395:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_Echo.c **** *
 398:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 400:Generated_Source\PSoC5/Timer_Echo.c **** *
 401:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 402:Generated_Source\PSoC5/Timer_Echo.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_Echo.c **** *
 404:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_Echo.c **** {
 317              		.loc 1 406 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 0002 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_Echo.c ****        return ((uint16)CY_GET_REG16(Timer_Echo_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer_Echo.c ****    #else
 410:Generated_Source\PSoC5/Timer_Echo.c ****        return (CY_GET_REG16(Timer_Echo_PERIOD_LSB_PTR));
 327              		.loc 1 410 0
 328 0004 034B     		ldr	r3, .L22
 329 0006 1B88     		ldrh	r3, [r3]	@ movhi
 330 0008 9BB2     		uxth	r3, r3
 411:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 14


 412:Generated_Source\PSoC5/Timer_Echo.c **** }
 331              		.loc 1 412 0
 332 000a 1846     		mov	r0, r3
 333 000c BD46     		mov	sp, r7
 334              		.cfi_def_cfa_register 13
 335              		@ sp needed
 336 000e 80BC     		pop	{r7}
 337              		.cfi_restore 7
 338              		.cfi_def_cfa_offset 0
 339 0010 7047     		bx	lr
 340              	.L23:
 341 0012 00BF     		.align	2
 342              	.L22:
 343 0014 486A0040 		.word	1073769032
 344              		.cfi_endproc
 345              	.LFE7:
 346              		.size	Timer_Echo_ReadPeriod, .-Timer_Echo_ReadPeriod
 347              		.section	.text.Timer_Echo_WritePeriod,"ax",%progbits
 348              		.align	2
 349              		.global	Timer_Echo_WritePeriod
 350              		.thumb
 351              		.thumb_func
 352              		.type	Timer_Echo_WritePeriod, %function
 353              	Timer_Echo_WritePeriod:
 354              	.LFB8:
 413:Generated_Source\PSoC5/Timer_Echo.c **** 
 414:Generated_Source\PSoC5/Timer_Echo.c **** 
 415:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WritePeriod
 417:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_Echo.c **** *
 419:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_Echo.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_Echo.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_Echo.c **** *
 423:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_Echo.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_Echo.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_Echo.c **** *
 427:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 428:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 429:Generated_Source\PSoC5/Timer_Echo.c **** *
 430:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/Timer_Echo.c **** {
 355              		.loc 1 432 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              		.cfi_def_cfa_offset 16
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 15


 367 0006 0346     		mov	r3, r0
 368 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 433:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_Echo.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 437:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_PERIOD_LSB_PTR, period);
 369              		.loc 1 437 0
 370 000a 044A     		ldr	r2, .L25
 371 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 372 000e 1380     		strh	r3, [r2]	@ movhi
 438:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_Echo.c **** }
 373              		.loc 1 439 0
 374 0010 00BF     		nop
 375 0012 0C37     		adds	r7, r7, #12
 376              		.cfi_def_cfa_offset 4
 377 0014 BD46     		mov	sp, r7
 378              		.cfi_def_cfa_register 13
 379              		@ sp needed
 380 0016 80BC     		pop	{r7}
 381              		.cfi_restore 7
 382              		.cfi_def_cfa_offset 0
 383 0018 7047     		bx	lr
 384              	.L26:
 385 001a 00BF     		.align	2
 386              	.L25:
 387 001c 486A0040 		.word	1073769032
 388              		.cfi_endproc
 389              	.LFE8:
 390              		.size	Timer_Echo_WritePeriod, .-Timer_Echo_WritePeriod
 391              		.section	.text.Timer_Echo_ReadCapture,"ax",%progbits
 392              		.align	2
 393              		.global	Timer_Echo_ReadCapture
 394              		.thumb
 395              		.thumb_func
 396              		.type	Timer_Echo_ReadCapture, %function
 397              	Timer_Echo_ReadCapture:
 398              	.LFB9:
 440:Generated_Source\PSoC5/Timer_Echo.c **** 
 441:Generated_Source\PSoC5/Timer_Echo.c **** 
 442:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCapture
 444:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_Echo.c **** *
 446:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_Echo.c **** *
 449:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 451:Generated_Source\PSoC5/Timer_Echo.c **** *
 452:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 453:Generated_Source\PSoC5/Timer_Echo.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_Echo.c **** *
 455:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_Echo.c **** {
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 16


 399              		.loc 1 457 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404 0000 80B4     		push	{r7}
 405              		.cfi_def_cfa_offset 4
 406              		.cfi_offset 7, -4
 407 0002 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_Echo.c ****        return ((uint16)CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer_Echo.c ****    #else
 461:Generated_Source\PSoC5/Timer_Echo.c ****        return (CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 409              		.loc 1 461 0
 410 0004 034B     		ldr	r3, .L29
 411 0006 1B88     		ldrh	r3, [r3]	@ movhi
 412 0008 9BB2     		uxth	r3, r3
 462:Generated_Source\PSoC5/Timer_Echo.c ****    #endif /* (Timer_Echo_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_Echo.c **** }
 413              		.loc 1 463 0
 414 000a 1846     		mov	r0, r3
 415 000c BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 000e 80BC     		pop	{r7}
 419              		.cfi_restore 7
 420              		.cfi_def_cfa_offset 0
 421 0010 7047     		bx	lr
 422              	.L30:
 423 0012 00BF     		.align	2
 424              	.L29:
 425 0014 886A0040 		.word	1073769096
 426              		.cfi_endproc
 427              	.LFE9:
 428              		.size	Timer_Echo_ReadCapture, .-Timer_Echo_ReadCapture
 429              		.section	.text.Timer_Echo_WriteCounter,"ax",%progbits
 430              		.align	2
 431              		.global	Timer_Echo_WriteCounter
 432              		.thumb
 433              		.thumb_func
 434              		.type	Timer_Echo_WriteCounter, %function
 435              	Timer_Echo_WriteCounter:
 436              	.LFB10:
 464:Generated_Source\PSoC5/Timer_Echo.c **** 
 465:Generated_Source\PSoC5/Timer_Echo.c **** 
 466:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_WriteCounter
 468:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_Echo.c **** *
 470:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_Echo.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_Echo.c **** *
 473:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_Echo.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer_Echo.c **** *
 476:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 17


 477:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 478:Generated_Source\PSoC5/Timer_Echo.c **** *
 479:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/Timer_Echo.c **** {
 437              		.loc 1 481 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442 0000 80B4     		push	{r7}
 443              		.cfi_def_cfa_offset 4
 444              		.cfi_offset 7, -4
 445 0002 83B0     		sub	sp, sp, #12
 446              		.cfi_def_cfa_offset 16
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 0346     		mov	r3, r0
 450 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 482:Generated_Source\PSoC5/Timer_Echo.c ****    #if(Timer_Echo_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_Echo.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_Echo.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_Echo.c ****          */
 486:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer_Echo.c ****         
 488:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 489:Generated_Source\PSoC5/Timer_Echo.c ****         CY_SET_REG16(Timer_Echo_COUNTER_LSB_PTR, counter);
 451              		.loc 1 489 0
 452 000a 044A     		ldr	r2, .L32
 453 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 454 000e 1380     		strh	r3, [r2]	@ movhi
 490:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_Echo.c **** }
 455              		.loc 1 491 0
 456 0010 00BF     		nop
 457 0012 0C37     		adds	r7, r7, #12
 458              		.cfi_def_cfa_offset 4
 459 0014 BD46     		mov	sp, r7
 460              		.cfi_def_cfa_register 13
 461              		@ sp needed
 462 0016 80BC     		pop	{r7}
 463              		.cfi_restore 7
 464              		.cfi_def_cfa_offset 0
 465 0018 7047     		bx	lr
 466              	.L33:
 467 001a 00BF     		.align	2
 468              	.L32:
 469 001c 086A0040 		.word	1073768968
 470              		.cfi_endproc
 471              	.LFE10:
 472              		.size	Timer_Echo_WriteCounter, .-Timer_Echo_WriteCounter
 473              		.section	.text.Timer_Echo_ReadCounter,"ax",%progbits
 474              		.align	2
 475              		.global	Timer_Echo_ReadCounter
 476              		.thumb
 477              		.thumb_func
 478              		.type	Timer_Echo_ReadCounter, %function
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 18


 479              	Timer_Echo_ReadCounter:
 480              	.LFB11:
 492:Generated_Source\PSoC5/Timer_Echo.c **** 
 493:Generated_Source\PSoC5/Timer_Echo.c **** 
 494:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCounter
 496:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_Echo.c **** *
 498:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_Echo.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_Echo.c **** *
 501:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 503:Generated_Source\PSoC5/Timer_Echo.c **** *
 504:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 505:Generated_Source\PSoC5/Timer_Echo.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_Echo.c **** *
 507:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_Echo.c **** uint16 Timer_Echo_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_Echo.c **** {
 481              		.loc 1 509 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 7, -4
 489 0002 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC5/Timer_Echo.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_Echo.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_Echo.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG16(Timer_Echo_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 516:Generated_Source\PSoC5/Timer_Echo.c ****         (void)CY_GET_REG8(Timer_Echo_COUNTER_LSB_PTR_8BIT);
 491              		.loc 1 516 0
 492 0004 044B     		ldr	r3, .L36
 493 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC5/Timer_Echo.c ****     #endif/* (Timer_Echo_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer_Echo.c **** 
 519:Generated_Source\PSoC5/Timer_Echo.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_Echo.c ****     #if(Timer_Echo_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_Echo.c ****         return ((uint16)CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer_Echo.c ****     #else
 523:Generated_Source\PSoC5/Timer_Echo.c ****         return (CY_GET_REG16(Timer_Echo_CAPTURE_LSB_PTR));
 494              		.loc 1 523 0
 495 0008 044B     		ldr	r3, .L36+4
 496 000a 1B88     		ldrh	r3, [r3]	@ movhi
 497 000c 9BB2     		uxth	r3, r3
 524:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (Timer_Echo_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_Echo.c **** }
 498              		.loc 1 525 0
 499 000e 1846     		mov	r0, r3
 500 0010 BD46     		mov	sp, r7
 501              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 19


 502              		@ sp needed
 503 0012 80BC     		pop	{r7}
 504              		.cfi_restore 7
 505              		.cfi_def_cfa_offset 0
 506 0014 7047     		bx	lr
 507              	.L37:
 508 0016 00BF     		.align	2
 509              	.L36:
 510 0018 04650040 		.word	1073767684
 511 001c 886A0040 		.word	1073769096
 512              		.cfi_endproc
 513              	.LFE11:
 514              		.size	Timer_Echo_ReadCounter, .-Timer_Echo_ReadCounter
 515              		.section	.text.Timer_Echo_ClearFIFO,"ax",%progbits
 516              		.align	2
 517              		.global	Timer_Echo_ClearFIFO
 518              		.thumb
 519              		.thumb_func
 520              		.type	Timer_Echo_ClearFIFO, %function
 521              	Timer_Echo_ClearFIFO:
 522              	.LFB12:
 526:Generated_Source\PSoC5/Timer_Echo.c **** 
 527:Generated_Source\PSoC5/Timer_Echo.c **** 
 528:Generated_Source\PSoC5/Timer_Echo.c **** #if(!Timer_Echo_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer_Echo.c **** 
 530:Generated_Source\PSoC5/Timer_Echo.c ****     
 531:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer_Echo.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer_Echo.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer_Echo.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer_Echo.c **** 
 536:Generated_Source\PSoC5/Timer_Echo.c **** 
 537:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer_Echo.c **** 
 539:Generated_Source\PSoC5/Timer_Echo.c **** 
 540:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetCaptureMode
 542:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer_Echo.c **** *
 544:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 545:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer_Echo.c **** *
 547:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer_Echo.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer_Echo.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer_Echo.c **** *  #define Timer_Echo__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer_Echo.c **** #define Timer_Echo__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer_Echo.c ****  identifiers
 556:Generated_Source\PSoC5/Timer_Echo.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer_Echo.c **** *  Timer_Echo__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer_Echo.c **** *
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 20


 562:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 563:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 564:Generated_Source\PSoC5/Timer_Echo.c **** *
 565:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer_Echo.c **** {
 568:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer_Echo.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_Echo_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer_Echo.c ****     captureMode &= (Timer_Echo_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer_Echo.c **** 
 572:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer_Echo.c **** 
 576:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer_Echo.c **** }
 580:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Timer_Echo.c **** 
 582:Generated_Source\PSoC5/Timer_Echo.c **** 
 583:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer_Echo.c **** 
 585:Generated_Source\PSoC5/Timer_Echo.c **** 
 586:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetTriggerMode
 588:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer_Echo.c **** *
 590:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 591:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer_Echo.c **** *
 593:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer_Echo.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer_Echo.c ****     #define Timer_Echo__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer_Echo.c **** *
 601:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 602:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 603:Generated_Source\PSoC5/Timer_Echo.c **** *
 604:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer_Echo.c **** {
 607:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer_Echo.c ****     triggerMode &= Timer_Echo_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer_Echo.c **** 
 610:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 611:Generated_Source\PSoC5/Timer_Echo.c ****     
 612:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer_Echo.c **** 
 615:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= (triggerMode | Timer_Echo__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer_Echo.c **** }
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 21


 619:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer_Echo.c **** 
 621:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer_Echo.c **** 
 623:Generated_Source\PSoC5/Timer_Echo.c **** 
 624:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_EnableTrigger
 626:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer_Echo.c **** *
 628:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 629:Generated_Source\PSoC5/Timer_Echo.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer_Echo.c **** *
 631:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 633:Generated_Source\PSoC5/Timer_Echo.c **** *
 634:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 635:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 636:Generated_Source\PSoC5/Timer_Echo.c **** *
 637:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer_Echo.c **** {
 640:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 641:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= Timer_Echo_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer_Echo.c **** }
 644:Generated_Source\PSoC5/Timer_Echo.c **** 
 645:Generated_Source\PSoC5/Timer_Echo.c **** 
 646:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_DisableTrigger
 648:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer_Echo.c **** *
 650:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 651:Generated_Source\PSoC5/Timer_Echo.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer_Echo.c **** *
 653:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 655:Generated_Source\PSoC5/Timer_Echo.c **** *
 656:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 657:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 658:Generated_Source\PSoC5/Timer_Echo.c **** *
 659:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer_Echo.c **** {
 662:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 663:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer_Echo.c **** }
 666:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer_Echo.c **** 
 668:Generated_Source\PSoC5/Timer_Echo.c **** #if(Timer_Echo_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer_Echo.c **** 
 670:Generated_Source\PSoC5/Timer_Echo.c **** 
 671:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetInterruptCount
 673:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer_Echo.c **** *
 675:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 22


 676:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer_Echo.c **** *
 678:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer_Echo.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer_Echo.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer_Echo.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer_Echo.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer_Echo.c **** *
 684:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 685:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 686:Generated_Source\PSoC5/Timer_Echo.c **** *
 687:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer_Echo.c **** {
 690:Generated_Source\PSoC5/Timer_Echo.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer_Echo.c ****     interruptCount &= Timer_Echo_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Timer_Echo.c **** 
 693:Generated_Source\PSoC5/Timer_Echo.c ****     #if (!Timer_Echo_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer_Echo.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL &= ((uint8)(~Timer_Echo_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/Timer_Echo.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer_Echo.c ****         Timer_Echo_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/Timer_Echo.c ****     #endif /* (!Timer_Echo_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer_Echo.c **** }
 700:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Timer_Echo_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer_Echo.c **** 
 702:Generated_Source\PSoC5/Timer_Echo.c **** 
 703:Generated_Source\PSoC5/Timer_Echo.c **** #if (Timer_Echo_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer_Echo.c **** 
 705:Generated_Source\PSoC5/Timer_Echo.c **** 
 706:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_SetCaptureCount
 708:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer_Echo.c **** *
 710:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 711:Generated_Source\PSoC5/Timer_Echo.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer_Echo.c **** *
 713:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer_Echo.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer_Echo.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer_Echo.c **** *                captures.
 717:Generated_Source\PSoC5/Timer_Echo.c **** *
 718:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 719:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 720:Generated_Source\PSoC5/Timer_Echo.c **** *
 721:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer_Echo.c **** {
 724:Generated_Source\PSoC5/Timer_Echo.c ****     Timer_Echo_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer_Echo.c **** }
 726:Generated_Source\PSoC5/Timer_Echo.c **** 
 727:Generated_Source\PSoC5/Timer_Echo.c **** 
 728:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer_Echo.c **** *
 732:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 23


 733:Generated_Source\PSoC5/Timer_Echo.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer_Echo.c **** *
 735:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 737:Generated_Source\PSoC5/Timer_Echo.c **** *
 738:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 739:Generated_Source\PSoC5/Timer_Echo.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer_Echo.c **** *
 741:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer_Echo.c **** uint8 Timer_Echo_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer_Echo.c **** {
 744:Generated_Source\PSoC5/Timer_Echo.c ****     return ((uint8)Timer_Echo_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer_Echo.c **** }
 746:Generated_Source\PSoC5/Timer_Echo.c **** #endif /* Timer_Echo_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer_Echo.c **** 
 748:Generated_Source\PSoC5/Timer_Echo.c **** 
 749:Generated_Source\PSoC5/Timer_Echo.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer_Echo.c **** * Function Name: Timer_Echo_ClearFIFO
 751:Generated_Source\PSoC5/Timer_Echo.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Timer_Echo.c **** *
 753:Generated_Source\PSoC5/Timer_Echo.c **** * Summary:
 754:Generated_Source\PSoC5/Timer_Echo.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer_Echo.c **** *
 756:Generated_Source\PSoC5/Timer_Echo.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 758:Generated_Source\PSoC5/Timer_Echo.c **** *
 759:Generated_Source\PSoC5/Timer_Echo.c **** * Return:
 760:Generated_Source\PSoC5/Timer_Echo.c **** *  void
 761:Generated_Source\PSoC5/Timer_Echo.c **** *
 762:Generated_Source\PSoC5/Timer_Echo.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer_Echo.c **** void Timer_Echo_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer_Echo.c **** {
 523              		.loc 1 764 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0000 80B5     		push	{r7, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 00AF     		add	r7, sp, #0
 532              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC5/Timer_Echo.c ****     while(0u != (Timer_Echo_ReadStatusRegister() & Timer_Echo_STATUS_FIFONEMP))
 533              		.loc 1 765 0
 534 0004 01E0     		b	.L39
 535              	.L40:
 766:Generated_Source\PSoC5/Timer_Echo.c ****     {
 767:Generated_Source\PSoC5/Timer_Echo.c ****         (void)Timer_Echo_ReadCapture();
 536              		.loc 1 767 0
 537 0006 FFF7FEFF 		bl	Timer_Echo_ReadCapture
 538              	.L39:
 765:Generated_Source\PSoC5/Timer_Echo.c ****     while(0u != (Timer_Echo_ReadStatusRegister() & Timer_Echo_STATUS_FIFONEMP))
 539              		.loc 1 765 0
 540 000a FFF7FEFF 		bl	Timer_Echo_ReadStatusRegister
 541 000e 0346     		mov	r3, r0
 542 0010 03F00803 		and	r3, r3, #8
 543 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 24


 544 0016 F6D1     		bne	.L40
 768:Generated_Source\PSoC5/Timer_Echo.c ****     }
 769:Generated_Source\PSoC5/Timer_Echo.c **** }
 545              		.loc 1 769 0
 546 0018 00BF     		nop
 547 001a 80BD     		pop	{r7, pc}
 548              		.cfi_endproc
 549              	.LFE12:
 550              		.size	Timer_Echo_ClearFIFO, .-Timer_Echo_ClearFIFO
 551              		.text
 552              	.Letext0:
 553              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 554              		.section	.debug_info,"",%progbits
 555              	.Ldebug_info0:
 556 0000 1B020000 		.4byte	0x21b
 557 0004 0400     		.2byte	0x4
 558 0006 00000000 		.4byte	.Ldebug_abbrev0
 559 000a 04       		.byte	0x4
 560 000b 01       		.uleb128 0x1
 561 000c 22000000 		.4byte	.LASF34
 562 0010 0C       		.byte	0xc
 563 0011 AD010000 		.4byte	.LASF35
 564 0015 09020000 		.4byte	.LASF36
 565 0019 00000000 		.4byte	.Ldebug_ranges0+0
 566 001d 00000000 		.4byte	0
 567 0021 00000000 		.4byte	.Ldebug_line0
 568 0025 02       		.uleb128 0x2
 569 0026 01       		.byte	0x1
 570 0027 06       		.byte	0x6
 571 0028 F9020000 		.4byte	.LASF0
 572 002c 02       		.uleb128 0x2
 573 002d 01       		.byte	0x1
 574 002e 08       		.byte	0x8
 575 002f 98010000 		.4byte	.LASF1
 576 0033 02       		.uleb128 0x2
 577 0034 02       		.byte	0x2
 578 0035 05       		.byte	0x5
 579 0036 AB020000 		.4byte	.LASF2
 580 003a 02       		.uleb128 0x2
 581 003b 02       		.byte	0x2
 582 003c 07       		.byte	0x7
 583 003d FB000000 		.4byte	.LASF3
 584 0041 02       		.uleb128 0x2
 585 0042 04       		.byte	0x4
 586 0043 05       		.byte	0x5
 587 0044 D3020000 		.4byte	.LASF4
 588 0048 02       		.uleb128 0x2
 589 0049 04       		.byte	0x4
 590 004a 07       		.byte	0x7
 591 004b 6B010000 		.4byte	.LASF5
 592 004f 02       		.uleb128 0x2
 593 0050 08       		.byte	0x8
 594 0051 05       		.byte	0x5
 595 0052 7F020000 		.4byte	.LASF6
 596 0056 02       		.uleb128 0x2
 597 0057 08       		.byte	0x8
 598 0058 07       		.byte	0x7
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 25


 599 0059 5F020000 		.4byte	.LASF7
 600 005d 03       		.uleb128 0x3
 601 005e 04       		.byte	0x4
 602 005f 05       		.byte	0x5
 603 0060 696E7400 		.ascii	"int\000"
 604 0064 02       		.uleb128 0x2
 605 0065 04       		.byte	0x4
 606 0066 07       		.byte	0x7
 607 0067 3F020000 		.4byte	.LASF8
 608 006b 04       		.uleb128 0x4
 609 006c 7D010000 		.4byte	.LASF9
 610 0070 02       		.byte	0x2
 611 0071 9201     		.2byte	0x192
 612 0073 2C000000 		.4byte	0x2c
 613 0077 04       		.uleb128 0x4
 614 0078 02020000 		.4byte	.LASF10
 615 007c 02       		.byte	0x2
 616 007d 9301     		.2byte	0x193
 617 007f 3A000000 		.4byte	0x3a
 618 0083 02       		.uleb128 0x2
 619 0084 04       		.byte	0x4
 620 0085 04       		.byte	0x4
 621 0086 41010000 		.4byte	.LASF11
 622 008a 02       		.uleb128 0x2
 623 008b 08       		.byte	0x8
 624 008c 04       		.byte	0x4
 625 008d A6010000 		.4byte	.LASF12
 626 0091 02       		.uleb128 0x2
 627 0092 01       		.byte	0x1
 628 0093 08       		.byte	0x8
 629 0094 1D000000 		.4byte	.LASF13
 630 0098 04       		.uleb128 0x4
 631 0099 66010000 		.4byte	.LASF14
 632 009d 02       		.byte	0x2
 633 009e 3C02     		.2byte	0x23c
 634 00a0 A4000000 		.4byte	0xa4
 635 00a4 05       		.uleb128 0x5
 636 00a5 6B000000 		.4byte	0x6b
 637 00a9 04       		.uleb128 0x4
 638 00aa 00000000 		.4byte	.LASF15
 639 00ae 02       		.byte	0x2
 640 00af 3D02     		.2byte	0x23d
 641 00b1 B5000000 		.4byte	0xb5
 642 00b5 05       		.uleb128 0x5
 643 00b6 77000000 		.4byte	0x77
 644 00ba 02       		.uleb128 0x2
 645 00bb 08       		.byte	0x8
 646 00bc 04       		.byte	0x4
 647 00bd ED020000 		.4byte	.LASF16
 648 00c1 02       		.uleb128 0x2
 649 00c2 04       		.byte	0x4
 650 00c3 07       		.byte	0x7
 651 00c4 76020000 		.4byte	.LASF17
 652 00c8 06       		.uleb128 0x6
 653 00c9 05030000 		.4byte	.LASF21
 654 00cd 01       		.byte	0x1
 655 00ce 2B       		.byte	0x2b
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 26


 656 00cf 00000000 		.4byte	.LFB0
 657 00d3 4C000000 		.4byte	.LFE0-.LFB0
 658 00d7 01       		.uleb128 0x1
 659 00d8 9C       		.byte	0x9c
 660 00d9 EC000000 		.4byte	0xec
 661 00dd 07       		.uleb128 0x7
 662 00de E8010000 		.4byte	.LASF37
 663 00e2 01       		.byte	0x1
 664 00e3 2F       		.byte	0x2f
 665 00e4 6B000000 		.4byte	0x6b
 666 00e8 02       		.uleb128 0x2
 667 00e9 91       		.byte	0x91
 668 00ea 77       		.sleb128 -9
 669 00eb 00       		.byte	0
 670 00ec 08       		.uleb128 0x8
 671 00ed CC000000 		.4byte	.LASF18
 672 00f1 01       		.byte	0x1
 673 00f2 B4       		.byte	0xb4
 674 00f3 00000000 		.4byte	.LFB1
 675 00f7 0C000000 		.4byte	.LFE1-.LFB1
 676 00fb 01       		.uleb128 0x1
 677 00fc 9C       		.byte	0x9c
 678 00fd 09       		.uleb128 0x9
 679 00fe DC020000 		.4byte	.LASF19
 680 0102 01       		.byte	0x1
 681 0103 D7       		.byte	0xd7
 682 0104 00000000 		.4byte	.LFB2
 683 0108 24000000 		.4byte	.LFE2-.LFB2
 684 010c 01       		.uleb128 0x1
 685 010d 9C       		.byte	0x9c
 686 010e 08       		.uleb128 0x8
 687 010f 9B020000 		.4byte	.LASF20
 688 0113 01       		.byte	0x1
 689 0114 F7       		.byte	0xf7
 690 0115 00000000 		.4byte	.LFB3
 691 0119 0C000000 		.4byte	.LFE3-.LFB3
 692 011d 01       		.uleb128 0x1
 693 011e 9C       		.byte	0x9c
 694 011f 0A       		.uleb128 0xa
 695 0120 B0000000 		.4byte	.LASF22
 696 0124 01       		.byte	0x1
 697 0125 1701     		.2byte	0x117
 698 0127 00000000 		.4byte	.LFB4
 699 012b 20000000 		.4byte	.LFE4-.LFB4
 700 012f 01       		.uleb128 0x1
 701 0130 9C       		.byte	0x9c
 702 0131 45010000 		.4byte	0x145
 703 0135 0B       		.uleb128 0xb
 704 0136 8D020000 		.4byte	.LASF27
 705 013a 01       		.byte	0x1
 706 013b 1701     		.2byte	0x117
 707 013d 6B000000 		.4byte	0x6b
 708 0141 02       		.uleb128 0x2
 709 0142 91       		.byte	0x91
 710 0143 77       		.sleb128 -9
 711 0144 00       		.byte	0
 712 0145 0C       		.uleb128 0xc
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 27


 713 0146 0E010000 		.4byte	.LASF23
 714 014a 01       		.byte	0x1
 715 014b 2E01     		.2byte	0x12e
 716 014d 00000000 		.4byte	.LFB5
 717 0151 14000000 		.4byte	.LFE5-.LFB5
 718 0155 01       		.uleb128 0x1
 719 0156 9C       		.byte	0x9c
 720 0157 0D       		.uleb128 0xd
 721 0158 B5020000 		.4byte	.LASF24
 722 015c 01       		.byte	0x1
 723 015d 4D01     		.2byte	0x14d
 724 015f 6B000000 		.4byte	0x6b
 725 0163 00000000 		.4byte	.LFB6
 726 0167 18000000 		.4byte	.LFE6-.LFB6
 727 016b 01       		.uleb128 0x1
 728 016c 9C       		.byte	0x9c
 729 016d 0D       		.uleb128 0xd
 730 016e E5000000 		.4byte	.LASF25
 731 0172 01       		.byte	0x1
 732 0173 9501     		.2byte	0x195
 733 0175 77000000 		.4byte	0x77
 734 0179 00000000 		.4byte	.LFB7
 735 017d 18000000 		.4byte	.LFE7-.LFB7
 736 0181 01       		.uleb128 0x1
 737 0182 9C       		.byte	0x9c
 738 0183 0A       		.uleb128 0xa
 739 0184 D1010000 		.4byte	.LASF26
 740 0188 01       		.byte	0x1
 741 0189 AF01     		.2byte	0x1af
 742 018b 00000000 		.4byte	.LFB8
 743 018f 20000000 		.4byte	.LFE8-.LFB8
 744 0193 01       		.uleb128 0x1
 745 0194 9C       		.byte	0x9c
 746 0195 A9010000 		.4byte	0x1a9
 747 0199 0B       		.uleb128 0xb
 748 019a DE000000 		.4byte	.LASF28
 749 019e 01       		.byte	0x1
 750 019f AF01     		.2byte	0x1af
 751 01a1 77000000 		.4byte	0x77
 752 01a5 02       		.uleb128 0x2
 753 01a6 91       		.byte	0x91
 754 01a7 76       		.sleb128 -10
 755 01a8 00       		.byte	0
 756 01a9 0D       		.uleb128 0xd
 757 01aa 06000000 		.4byte	.LASF29
 758 01ae 01       		.byte	0x1
 759 01af C801     		.2byte	0x1c8
 760 01b1 77000000 		.4byte	0x77
 761 01b5 00000000 		.4byte	.LFB9
 762 01b9 18000000 		.4byte	.LFE9-.LFB9
 763 01bd 01       		.uleb128 0x1
 764 01be 9C       		.byte	0x9c
 765 01bf 0A       		.uleb128 0xa
 766 01c0 29010000 		.4byte	.LASF30
 767 01c4 01       		.byte	0x1
 768 01c5 E001     		.2byte	0x1e0
 769 01c7 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 28


 770 01cb 20000000 		.4byte	.LFE10-.LFB10
 771 01cf 01       		.uleb128 0x1
 772 01d0 9C       		.byte	0x9c
 773 01d1 E5010000 		.4byte	0x1e5
 774 01d5 0B       		.uleb128 0xb
 775 01d6 47010000 		.4byte	.LASF31
 776 01da 01       		.byte	0x1
 777 01db E001     		.2byte	0x1e0
 778 01dd 77000000 		.4byte	0x77
 779 01e1 02       		.uleb128 0x2
 780 01e2 91       		.byte	0x91
 781 01e3 76       		.sleb128 -10
 782 01e4 00       		.byte	0
 783 01e5 0D       		.uleb128 0xd
 784 01e6 4F010000 		.4byte	.LASF32
 785 01ea 01       		.byte	0x1
 786 01eb FC01     		.2byte	0x1fc
 787 01ed 77000000 		.4byte	0x77
 788 01f1 00000000 		.4byte	.LFB11
 789 01f5 20000000 		.4byte	.LFE11-.LFB11
 790 01f9 01       		.uleb128 0x1
 791 01fa 9C       		.byte	0x9c
 792 01fb 0E       		.uleb128 0xe
 793 01fc 83010000 		.4byte	.LASF33
 794 0200 01       		.byte	0x1
 795 0201 FB02     		.2byte	0x2fb
 796 0203 00000000 		.4byte	.LFB12
 797 0207 1C000000 		.4byte	.LFE12-.LFB12
 798 020b 01       		.uleb128 0x1
 799 020c 9C       		.byte	0x9c
 800 020d 0F       		.uleb128 0xf
 801 020e 4C020000 		.4byte	.LASF38
 802 0212 01       		.byte	0x1
 803 0213 1A       		.byte	0x1a
 804 0214 6B000000 		.4byte	0x6b
 805 0218 05       		.uleb128 0x5
 806 0219 03       		.byte	0x3
 807 021a 00000000 		.4byte	Timer_Echo_initVar
 808 021e 00       		.byte	0
 809              		.section	.debug_abbrev,"",%progbits
 810              	.Ldebug_abbrev0:
 811 0000 01       		.uleb128 0x1
 812 0001 11       		.uleb128 0x11
 813 0002 01       		.byte	0x1
 814 0003 25       		.uleb128 0x25
 815 0004 0E       		.uleb128 0xe
 816 0005 13       		.uleb128 0x13
 817 0006 0B       		.uleb128 0xb
 818 0007 03       		.uleb128 0x3
 819 0008 0E       		.uleb128 0xe
 820 0009 1B       		.uleb128 0x1b
 821 000a 0E       		.uleb128 0xe
 822 000b 55       		.uleb128 0x55
 823 000c 17       		.uleb128 0x17
 824 000d 11       		.uleb128 0x11
 825 000e 01       		.uleb128 0x1
 826 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 29


 827 0010 17       		.uleb128 0x17
 828 0011 00       		.byte	0
 829 0012 00       		.byte	0
 830 0013 02       		.uleb128 0x2
 831 0014 24       		.uleb128 0x24
 832 0015 00       		.byte	0
 833 0016 0B       		.uleb128 0xb
 834 0017 0B       		.uleb128 0xb
 835 0018 3E       		.uleb128 0x3e
 836 0019 0B       		.uleb128 0xb
 837 001a 03       		.uleb128 0x3
 838 001b 0E       		.uleb128 0xe
 839 001c 00       		.byte	0
 840 001d 00       		.byte	0
 841 001e 03       		.uleb128 0x3
 842 001f 24       		.uleb128 0x24
 843 0020 00       		.byte	0
 844 0021 0B       		.uleb128 0xb
 845 0022 0B       		.uleb128 0xb
 846 0023 3E       		.uleb128 0x3e
 847 0024 0B       		.uleb128 0xb
 848 0025 03       		.uleb128 0x3
 849 0026 08       		.uleb128 0x8
 850 0027 00       		.byte	0
 851 0028 00       		.byte	0
 852 0029 04       		.uleb128 0x4
 853 002a 16       		.uleb128 0x16
 854 002b 00       		.byte	0
 855 002c 03       		.uleb128 0x3
 856 002d 0E       		.uleb128 0xe
 857 002e 3A       		.uleb128 0x3a
 858 002f 0B       		.uleb128 0xb
 859 0030 3B       		.uleb128 0x3b
 860 0031 05       		.uleb128 0x5
 861 0032 49       		.uleb128 0x49
 862 0033 13       		.uleb128 0x13
 863 0034 00       		.byte	0
 864 0035 00       		.byte	0
 865 0036 05       		.uleb128 0x5
 866 0037 35       		.uleb128 0x35
 867 0038 00       		.byte	0
 868 0039 49       		.uleb128 0x49
 869 003a 13       		.uleb128 0x13
 870 003b 00       		.byte	0
 871 003c 00       		.byte	0
 872 003d 06       		.uleb128 0x6
 873 003e 2E       		.uleb128 0x2e
 874 003f 01       		.byte	0x1
 875 0040 3F       		.uleb128 0x3f
 876 0041 19       		.uleb128 0x19
 877 0042 03       		.uleb128 0x3
 878 0043 0E       		.uleb128 0xe
 879 0044 3A       		.uleb128 0x3a
 880 0045 0B       		.uleb128 0xb
 881 0046 3B       		.uleb128 0x3b
 882 0047 0B       		.uleb128 0xb
 883 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 30


 884 0049 19       		.uleb128 0x19
 885 004a 11       		.uleb128 0x11
 886 004b 01       		.uleb128 0x1
 887 004c 12       		.uleb128 0x12
 888 004d 06       		.uleb128 0x6
 889 004e 40       		.uleb128 0x40
 890 004f 18       		.uleb128 0x18
 891 0050 9642     		.uleb128 0x2116
 892 0052 19       		.uleb128 0x19
 893 0053 01       		.uleb128 0x1
 894 0054 13       		.uleb128 0x13
 895 0055 00       		.byte	0
 896 0056 00       		.byte	0
 897 0057 07       		.uleb128 0x7
 898 0058 34       		.uleb128 0x34
 899 0059 00       		.byte	0
 900 005a 03       		.uleb128 0x3
 901 005b 0E       		.uleb128 0xe
 902 005c 3A       		.uleb128 0x3a
 903 005d 0B       		.uleb128 0xb
 904 005e 3B       		.uleb128 0x3b
 905 005f 0B       		.uleb128 0xb
 906 0060 49       		.uleb128 0x49
 907 0061 13       		.uleb128 0x13
 908 0062 02       		.uleb128 0x2
 909 0063 18       		.uleb128 0x18
 910 0064 00       		.byte	0
 911 0065 00       		.byte	0
 912 0066 08       		.uleb128 0x8
 913 0067 2E       		.uleb128 0x2e
 914 0068 00       		.byte	0
 915 0069 3F       		.uleb128 0x3f
 916 006a 19       		.uleb128 0x19
 917 006b 03       		.uleb128 0x3
 918 006c 0E       		.uleb128 0xe
 919 006d 3A       		.uleb128 0x3a
 920 006e 0B       		.uleb128 0xb
 921 006f 3B       		.uleb128 0x3b
 922 0070 0B       		.uleb128 0xb
 923 0071 27       		.uleb128 0x27
 924 0072 19       		.uleb128 0x19
 925 0073 11       		.uleb128 0x11
 926 0074 01       		.uleb128 0x1
 927 0075 12       		.uleb128 0x12
 928 0076 06       		.uleb128 0x6
 929 0077 40       		.uleb128 0x40
 930 0078 18       		.uleb128 0x18
 931 0079 9742     		.uleb128 0x2117
 932 007b 19       		.uleb128 0x19
 933 007c 00       		.byte	0
 934 007d 00       		.byte	0
 935 007e 09       		.uleb128 0x9
 936 007f 2E       		.uleb128 0x2e
 937 0080 00       		.byte	0
 938 0081 3F       		.uleb128 0x3f
 939 0082 19       		.uleb128 0x19
 940 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 31


 941 0084 0E       		.uleb128 0xe
 942 0085 3A       		.uleb128 0x3a
 943 0086 0B       		.uleb128 0xb
 944 0087 3B       		.uleb128 0x3b
 945 0088 0B       		.uleb128 0xb
 946 0089 27       		.uleb128 0x27
 947 008a 19       		.uleb128 0x19
 948 008b 11       		.uleb128 0x11
 949 008c 01       		.uleb128 0x1
 950 008d 12       		.uleb128 0x12
 951 008e 06       		.uleb128 0x6
 952 008f 40       		.uleb128 0x40
 953 0090 18       		.uleb128 0x18
 954 0091 9642     		.uleb128 0x2116
 955 0093 19       		.uleb128 0x19
 956 0094 00       		.byte	0
 957 0095 00       		.byte	0
 958 0096 0A       		.uleb128 0xa
 959 0097 2E       		.uleb128 0x2e
 960 0098 01       		.byte	0x1
 961 0099 3F       		.uleb128 0x3f
 962 009a 19       		.uleb128 0x19
 963 009b 03       		.uleb128 0x3
 964 009c 0E       		.uleb128 0xe
 965 009d 3A       		.uleb128 0x3a
 966 009e 0B       		.uleb128 0xb
 967 009f 3B       		.uleb128 0x3b
 968 00a0 05       		.uleb128 0x5
 969 00a1 27       		.uleb128 0x27
 970 00a2 19       		.uleb128 0x19
 971 00a3 11       		.uleb128 0x11
 972 00a4 01       		.uleb128 0x1
 973 00a5 12       		.uleb128 0x12
 974 00a6 06       		.uleb128 0x6
 975 00a7 40       		.uleb128 0x40
 976 00a8 18       		.uleb128 0x18
 977 00a9 9742     		.uleb128 0x2117
 978 00ab 19       		.uleb128 0x19
 979 00ac 01       		.uleb128 0x1
 980 00ad 13       		.uleb128 0x13
 981 00ae 00       		.byte	0
 982 00af 00       		.byte	0
 983 00b0 0B       		.uleb128 0xb
 984 00b1 05       		.uleb128 0x5
 985 00b2 00       		.byte	0
 986 00b3 03       		.uleb128 0x3
 987 00b4 0E       		.uleb128 0xe
 988 00b5 3A       		.uleb128 0x3a
 989 00b6 0B       		.uleb128 0xb
 990 00b7 3B       		.uleb128 0x3b
 991 00b8 05       		.uleb128 0x5
 992 00b9 49       		.uleb128 0x49
 993 00ba 13       		.uleb128 0x13
 994 00bb 02       		.uleb128 0x2
 995 00bc 18       		.uleb128 0x18
 996 00bd 00       		.byte	0
 997 00be 00       		.byte	0
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 32


 998 00bf 0C       		.uleb128 0xc
 999 00c0 2E       		.uleb128 0x2e
 1000 00c1 00       		.byte	0
 1001 00c2 3F       		.uleb128 0x3f
 1002 00c3 19       		.uleb128 0x19
 1003 00c4 03       		.uleb128 0x3
 1004 00c5 0E       		.uleb128 0xe
 1005 00c6 3A       		.uleb128 0x3a
 1006 00c7 0B       		.uleb128 0xb
 1007 00c8 3B       		.uleb128 0x3b
 1008 00c9 05       		.uleb128 0x5
 1009 00ca 27       		.uleb128 0x27
 1010 00cb 19       		.uleb128 0x19
 1011 00cc 11       		.uleb128 0x11
 1012 00cd 01       		.uleb128 0x1
 1013 00ce 12       		.uleb128 0x12
 1014 00cf 06       		.uleb128 0x6
 1015 00d0 40       		.uleb128 0x40
 1016 00d1 18       		.uleb128 0x18
 1017 00d2 9742     		.uleb128 0x2117
 1018 00d4 19       		.uleb128 0x19
 1019 00d5 00       		.byte	0
 1020 00d6 00       		.byte	0
 1021 00d7 0D       		.uleb128 0xd
 1022 00d8 2E       		.uleb128 0x2e
 1023 00d9 00       		.byte	0
 1024 00da 3F       		.uleb128 0x3f
 1025 00db 19       		.uleb128 0x19
 1026 00dc 03       		.uleb128 0x3
 1027 00dd 0E       		.uleb128 0xe
 1028 00de 3A       		.uleb128 0x3a
 1029 00df 0B       		.uleb128 0xb
 1030 00e0 3B       		.uleb128 0x3b
 1031 00e1 05       		.uleb128 0x5
 1032 00e2 27       		.uleb128 0x27
 1033 00e3 19       		.uleb128 0x19
 1034 00e4 49       		.uleb128 0x49
 1035 00e5 13       		.uleb128 0x13
 1036 00e6 11       		.uleb128 0x11
 1037 00e7 01       		.uleb128 0x1
 1038 00e8 12       		.uleb128 0x12
 1039 00e9 06       		.uleb128 0x6
 1040 00ea 40       		.uleb128 0x40
 1041 00eb 18       		.uleb128 0x18
 1042 00ec 9742     		.uleb128 0x2117
 1043 00ee 19       		.uleb128 0x19
 1044 00ef 00       		.byte	0
 1045 00f0 00       		.byte	0
 1046 00f1 0E       		.uleb128 0xe
 1047 00f2 2E       		.uleb128 0x2e
 1048 00f3 00       		.byte	0
 1049 00f4 3F       		.uleb128 0x3f
 1050 00f5 19       		.uleb128 0x19
 1051 00f6 03       		.uleb128 0x3
 1052 00f7 0E       		.uleb128 0xe
 1053 00f8 3A       		.uleb128 0x3a
 1054 00f9 0B       		.uleb128 0xb
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 33


 1055 00fa 3B       		.uleb128 0x3b
 1056 00fb 05       		.uleb128 0x5
 1057 00fc 27       		.uleb128 0x27
 1058 00fd 19       		.uleb128 0x19
 1059 00fe 11       		.uleb128 0x11
 1060 00ff 01       		.uleb128 0x1
 1061 0100 12       		.uleb128 0x12
 1062 0101 06       		.uleb128 0x6
 1063 0102 40       		.uleb128 0x40
 1064 0103 18       		.uleb128 0x18
 1065 0104 9642     		.uleb128 0x2116
 1066 0106 19       		.uleb128 0x19
 1067 0107 00       		.byte	0
 1068 0108 00       		.byte	0
 1069 0109 0F       		.uleb128 0xf
 1070 010a 34       		.uleb128 0x34
 1071 010b 00       		.byte	0
 1072 010c 03       		.uleb128 0x3
 1073 010d 0E       		.uleb128 0xe
 1074 010e 3A       		.uleb128 0x3a
 1075 010f 0B       		.uleb128 0xb
 1076 0110 3B       		.uleb128 0x3b
 1077 0111 0B       		.uleb128 0xb
 1078 0112 49       		.uleb128 0x49
 1079 0113 13       		.uleb128 0x13
 1080 0114 3F       		.uleb128 0x3f
 1081 0115 19       		.uleb128 0x19
 1082 0116 02       		.uleb128 0x2
 1083 0117 18       		.uleb128 0x18
 1084 0118 00       		.byte	0
 1085 0119 00       		.byte	0
 1086 011a 00       		.byte	0
 1087              		.section	.debug_aranges,"",%progbits
 1088 0000 7C000000 		.4byte	0x7c
 1089 0004 0200     		.2byte	0x2
 1090 0006 00000000 		.4byte	.Ldebug_info0
 1091 000a 04       		.byte	0x4
 1092 000b 00       		.byte	0
 1093 000c 0000     		.2byte	0
 1094 000e 0000     		.2byte	0
 1095 0010 00000000 		.4byte	.LFB0
 1096 0014 4C000000 		.4byte	.LFE0-.LFB0
 1097 0018 00000000 		.4byte	.LFB1
 1098 001c 0C000000 		.4byte	.LFE1-.LFB1
 1099 0020 00000000 		.4byte	.LFB2
 1100 0024 24000000 		.4byte	.LFE2-.LFB2
 1101 0028 00000000 		.4byte	.LFB3
 1102 002c 0C000000 		.4byte	.LFE3-.LFB3
 1103 0030 00000000 		.4byte	.LFB4
 1104 0034 20000000 		.4byte	.LFE4-.LFB4
 1105 0038 00000000 		.4byte	.LFB5
 1106 003c 14000000 		.4byte	.LFE5-.LFB5
 1107 0040 00000000 		.4byte	.LFB6
 1108 0044 18000000 		.4byte	.LFE6-.LFB6
 1109 0048 00000000 		.4byte	.LFB7
 1110 004c 18000000 		.4byte	.LFE7-.LFB7
 1111 0050 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 34


 1112 0054 20000000 		.4byte	.LFE8-.LFB8
 1113 0058 00000000 		.4byte	.LFB9
 1114 005c 18000000 		.4byte	.LFE9-.LFB9
 1115 0060 00000000 		.4byte	.LFB10
 1116 0064 20000000 		.4byte	.LFE10-.LFB10
 1117 0068 00000000 		.4byte	.LFB11
 1118 006c 20000000 		.4byte	.LFE11-.LFB11
 1119 0070 00000000 		.4byte	.LFB12
 1120 0074 1C000000 		.4byte	.LFE12-.LFB12
 1121 0078 00000000 		.4byte	0
 1122 007c 00000000 		.4byte	0
 1123              		.section	.debug_ranges,"",%progbits
 1124              	.Ldebug_ranges0:
 1125 0000 00000000 		.4byte	.LFB0
 1126 0004 4C000000 		.4byte	.LFE0
 1127 0008 00000000 		.4byte	.LFB1
 1128 000c 0C000000 		.4byte	.LFE1
 1129 0010 00000000 		.4byte	.LFB2
 1130 0014 24000000 		.4byte	.LFE2
 1131 0018 00000000 		.4byte	.LFB3
 1132 001c 0C000000 		.4byte	.LFE3
 1133 0020 00000000 		.4byte	.LFB4
 1134 0024 20000000 		.4byte	.LFE4
 1135 0028 00000000 		.4byte	.LFB5
 1136 002c 14000000 		.4byte	.LFE5
 1137 0030 00000000 		.4byte	.LFB6
 1138 0034 18000000 		.4byte	.LFE6
 1139 0038 00000000 		.4byte	.LFB7
 1140 003c 18000000 		.4byte	.LFE7
 1141 0040 00000000 		.4byte	.LFB8
 1142 0044 20000000 		.4byte	.LFE8
 1143 0048 00000000 		.4byte	.LFB9
 1144 004c 18000000 		.4byte	.LFE9
 1145 0050 00000000 		.4byte	.LFB10
 1146 0054 20000000 		.4byte	.LFE10
 1147 0058 00000000 		.4byte	.LFB11
 1148 005c 20000000 		.4byte	.LFE11
 1149 0060 00000000 		.4byte	.LFB12
 1150 0064 1C000000 		.4byte	.LFE12
 1151 0068 00000000 		.4byte	0
 1152 006c 00000000 		.4byte	0
 1153              		.section	.debug_line,"",%progbits
 1154              	.Ldebug_line0:
 1155 0000 4B010000 		.section	.debug_str,"MS",%progbits,1
 1155      02004700 
 1155      00000201 
 1155      FB0E0D00 
 1155      01010101 
 1156              	.LASF15:
 1157 0000 72656731 		.ascii	"reg16\000"
 1157      3600
 1158              	.LASF29:
 1159 0006 54696D65 		.ascii	"Timer_Echo_ReadCapture\000"
 1159      725F4563 
 1159      686F5F52 
 1159      65616443 
 1159      61707475 
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 35


 1160              	.LASF13:
 1161 001d 63686172 		.ascii	"char\000"
 1161      00
 1162              	.LASF34:
 1163 0022 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1163      43313120 
 1163      352E342E 
 1163      31203230 
 1163      31363036 
 1164 0055 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1164      20726576 
 1164      6973696F 
 1164      6E203233 
 1164      37373135 
 1165 0088 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1165      66756E63 
 1165      74696F6E 
 1165      2D736563 
 1165      74696F6E 
 1166              	.LASF22:
 1167 00b0 54696D65 		.ascii	"Timer_Echo_SetInterruptMode\000"
 1167      725F4563 
 1167      686F5F53 
 1167      6574496E 
 1167      74657272 
 1168              	.LASF18:
 1169 00cc 54696D65 		.ascii	"Timer_Echo_Enable\000"
 1169      725F4563 
 1169      686F5F45 
 1169      6E61626C 
 1169      6500
 1170              	.LASF28:
 1171 00de 70657269 		.ascii	"period\000"
 1171      6F6400
 1172              	.LASF25:
 1173 00e5 54696D65 		.ascii	"Timer_Echo_ReadPeriod\000"
 1173      725F4563 
 1173      686F5F52 
 1173      65616450 
 1173      6572696F 
 1174              	.LASF3:
 1175 00fb 73686F72 		.ascii	"short unsigned int\000"
 1175      7420756E 
 1175      7369676E 
 1175      65642069 
 1175      6E7400
 1176              	.LASF23:
 1177 010e 54696D65 		.ascii	"Timer_Echo_SoftwareCapture\000"
 1177      725F4563 
 1177      686F5F53 
 1177      6F667477 
 1177      61726543 
 1178              	.LASF30:
 1179 0129 54696D65 		.ascii	"Timer_Echo_WriteCounter\000"
 1179      725F4563 
 1179      686F5F57 
 1179      72697465 
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 36


 1179      436F756E 
 1180              	.LASF11:
 1181 0141 666C6F61 		.ascii	"float\000"
 1181      7400
 1182              	.LASF31:
 1183 0147 636F756E 		.ascii	"counter\000"
 1183      74657200 
 1184              	.LASF32:
 1185 014f 54696D65 		.ascii	"Timer_Echo_ReadCounter\000"
 1185      725F4563 
 1185      686F5F52 
 1185      65616443 
 1185      6F756E74 
 1186              	.LASF14:
 1187 0166 72656738 		.ascii	"reg8\000"
 1187      00
 1188              	.LASF5:
 1189 016b 6C6F6E67 		.ascii	"long unsigned int\000"
 1189      20756E73 
 1189      69676E65 
 1189      6420696E 
 1189      7400
 1190              	.LASF9:
 1191 017d 75696E74 		.ascii	"uint8\000"
 1191      3800
 1192              	.LASF33:
 1193 0183 54696D65 		.ascii	"Timer_Echo_ClearFIFO\000"
 1193      725F4563 
 1193      686F5F43 
 1193      6C656172 
 1193      4649464F 
 1194              	.LASF1:
 1195 0198 756E7369 		.ascii	"unsigned char\000"
 1195      676E6564 
 1195      20636861 
 1195      7200
 1196              	.LASF12:
 1197 01a6 646F7562 		.ascii	"double\000"
 1197      6C6500
 1198              	.LASF35:
 1199 01ad 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_Echo.c\000"
 1199      72617465 
 1199      645F536F 
 1199      75726365 
 1199      5C50536F 
 1200              	.LASF26:
 1201 01d1 54696D65 		.ascii	"Timer_Echo_WritePeriod\000"
 1201      725F4563 
 1201      686F5F57 
 1201      72697465 
 1201      50657269 
 1202              	.LASF37:
 1203 01e8 54696D65 		.ascii	"Timer_Echo_interruptState\000"
 1203      725F4563 
 1203      686F5F69 
 1203      6E746572 
 1203      72757074 
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 37


 1204              	.LASF10:
 1205 0202 75696E74 		.ascii	"uint16\000"
 1205      313600
 1206              	.LASF36:
 1207 0209 533A5C43 		.ascii	"S:\\CODE 22\\PSOC\\PSoC_Audio_MIDI\\PSoC_Audio_MIDI"
 1207      4F444520 
 1207      32325C50 
 1207      534F435C 
 1207      50536F43 
 1208 0238 2E637964 		.ascii	".cydsn\000"
 1208      736E00
 1209              	.LASF8:
 1210 023f 756E7369 		.ascii	"unsigned int\000"
 1210      676E6564 
 1210      20696E74 
 1210      00
 1211              	.LASF38:
 1212 024c 54696D65 		.ascii	"Timer_Echo_initVar\000"
 1212      725F4563 
 1212      686F5F69 
 1212      6E697456 
 1212      617200
 1213              	.LASF7:
 1214 025f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1214      206C6F6E 
 1214      6720756E 
 1214      7369676E 
 1214      65642069 
 1215              	.LASF17:
 1216 0276 73697A65 		.ascii	"sizetype\000"
 1216      74797065 
 1216      00
 1217              	.LASF6:
 1218 027f 6C6F6E67 		.ascii	"long long int\000"
 1218      206C6F6E 
 1218      6720696E 
 1218      7400
 1219              	.LASF27:
 1220 028d 696E7465 		.ascii	"interruptMode\000"
 1220      72727570 
 1220      744D6F64 
 1220      6500
 1221              	.LASF20:
 1222 029b 54696D65 		.ascii	"Timer_Echo_Stop\000"
 1222      725F4563 
 1222      686F5F53 
 1222      746F7000 
 1223              	.LASF2:
 1224 02ab 73686F72 		.ascii	"short int\000"
 1224      7420696E 
 1224      7400
 1225              	.LASF24:
 1226 02b5 54696D65 		.ascii	"Timer_Echo_ReadStatusRegister\000"
 1226      725F4563 
 1226      686F5F52 
 1226      65616453 
 1226      74617475 
ARM GAS  C:\Users\silvan\AppData\Local\Temp\cc7yCLk0.s 			page 38


 1227              	.LASF4:
 1228 02d3 6C6F6E67 		.ascii	"long int\000"
 1228      20696E74 
 1228      00
 1229              	.LASF19:
 1230 02dc 54696D65 		.ascii	"Timer_Echo_Start\000"
 1230      725F4563 
 1230      686F5F53 
 1230      74617274 
 1230      00
 1231              	.LASF16:
 1232 02ed 6C6F6E67 		.ascii	"long double\000"
 1232      20646F75 
 1232      626C6500 
 1233              	.LASF0:
 1234 02f9 7369676E 		.ascii	"signed char\000"
 1234      65642063 
 1234      68617200 
 1235              	.LASF21:
 1236 0305 54696D65 		.ascii	"Timer_Echo_Init\000"
 1236      725F4563 
 1236      686F5F49 
 1236      6E697400 
 1237              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
