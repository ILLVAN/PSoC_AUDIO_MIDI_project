PSoC 5LP Project

• #boygroup:  "the 3 psocks..???" [Marius Mannel, Darius Nock, Silvan Weber]
• What is it?  
We call it: psocks instroller. … (to discuss, name to declare at deadline x)
An electronical music instrument: audio signal generator & MIDI control
sensors, actors, features, I/O:
	- If possible: audio out. Else: 0..5V signal generator out (LFO)
	- settings: some capacitive sensing pads, buttons
	- distance echos control (absolute), e.g. pitch, volume, modulation etc.
	- Joystick control (incremental), e.g. retrig, shape etc.
	- display for waveform and/or settings view 
	- 360° encoders: waveform select / MIDI channel select
	- MIDI IN / OUT circuitry: retrig can be synced to external clock, sends pitch on selected channel
	- *4-6 control state cube (orientation sensitive)
	- *WiFi Extension via external ESP32 board for web server control/monitoring
	- *rgb LED control: status / ambient
	- *fire/humidity/void/magnet detection (sensor playground)

*bonus, if there is time left
	
• Where is it used? 
It could be used in live music, music production and other performance situations. Audio out should produce a cheap sounding but at least fun output. The MIDI out can be connected to any synthesizer hardware. If the audio part will not satisfy, it could still be realized as low frequency oscillator, a signal generator with preset functions to feed modular gear. Regarding one month development time, the instroller probably will not reach production level. We rather look at it it as a hopefully useful µC audio learning exercise. 

• Why do you want to make it? 
We want to find out the details of PSoC workin on audio and input handling. We hope for fast responsive feels by using capacitive keypads and similar advantages. The ongoing question is: how much can it handle precisely, pseudo-simultanously: basically we could contribute this project being a subjective PSoC 5 - ESP32 comparison. The WiFi extension could in general be an useful add-on, in times where PSoC WiFi boards are to expensive or unavailable, this way one could upgrade any PSoC by taking a 4€ ESP32 with good availability.

• How are you going to implement it? 
First we need to clear up, what exactly to implement, the most critical part - as we think now - is the audio out. We have some experience with MIDI, this topic requires some thinking about timer IRs, but should be possible via UART. The second step depends on the sensors: different approaches are necessary, since some are time critical (echos), need debouncing (buttons/pads) or other special care. Especially communication and monitoring can slow down the loop, but again: there will be timers and interrupt solutions. Maybe some multiplexing will take place for some buttons / dip switches if needed. Wifi Extension would be possible connecting ESP32 RX/TX. This way, the instroller could be wirelessly talking to some other controllers. Optional WebServer controlling or displaying anything / connection to existing ESPNOW network as input handler are things in mind. In any case, sooner or later, the device will get a proper case and will be soldered if we find the PSoCs to buy cheap, probably otherwise there will just be a breadboard demo using the borrowed board.

• How are you going to meet the project deadline? 
We sleep less and go for it. Since we declare our instroller as a learning experience, we have to admit that we might have to kill the bonus if we get stuck on higher priorized topics. If we get the audio working, the other I/O is a timing issue, but hopefully not that crucial. We decided to work in a group of three to spread tasks and profit of the other's experiences. If we do not meet the deadline regarding all visioned feateures we will still have learned how to collaborate via GitHub. 

• How and where are you going to get the required components? 
We already have them around, some already tested on other boards, some to explore. We have ESPs around which could be used for any edge computing if the PSoC get's a hard time on centralized read and write (e.g. outsource MIDI clock read, display out)
